print("Hello world")
q()
q()
q()
install.packages(tidyverse)
library(tidyverse)
install.packages(tidyverse)
mydata = read_csv("kaggle-preprocessed")
library(tidyverse)
library(tidyverse)
mydata = read_csv("kaggle-preprocessed.csv")
mydata
library(gapminder)
library(gapminder)
library(tidyverse)
mydata = read_csv("kaggle-preprocessed")
mydata = read_csv("kaggle-preprocessed")
mydata = read_csv("kaggle-preprocessed.csv")
mydata = read_csv("kaggle-preprocessed.csv")
df <- read.csv("C:/Users/User/Documents/Raw Data/kaggle-preprocessed.csv")
df <- read.csv("C:/Users/User/Raw Data/kaggle-preprocessed.csv")
df = read.csv("C:/Users/User/Raw Data/kaggle-preprocessed.csv")
df = read.csv("C:/Users/User/Raw data/kaggle-preprocessed.csv")
df = read_csv("C:/Users/User/Raw data/kaggle-preprocessed.csv")
data=read_csv("kaggle-preprocessed.csv")
install.packages("tidyverse")
library(tidyverse)
data=read_csv("kaggle-preprocessed.csv")
data=read_csv("kaggle-preprocessed.csv")
data=read_csv("kaggle-preprocessed.csv")
data=read_csv("kaggle-preprocessed.csv")
library(tidyverse)
data=read_csv("C:\Users\User\Downloads\kaggle-preprocessed.csv")
data=read_csv("kaggle-preprocessed.csv")
boxplot(mydata$`Total population`,
main = "Univariate Boxplot of Total Population",
ylab = "Total Population",
col = "lightblue",
border = "blue",
notch = TRUE)
library(tidyverse)
library(readr)
library(ggplot2)
mydata = read_csv("census.csv")
library(tidyverse)
library(readr)
library(ggplot2)
mydata = read_csv("census.csv")
setwd("C:/Users/User/Desktop/Raw data")
mydata = read_csv("census.csv")
mydata
ggplot(mydata, aes(y = `Total Male`)) +
geom_boxplot()
ggplot(mydata, aes(x = District, y = `Total population`)) +
geom_boxplot()
boxplot(mydata$`Total population`,
main = "Univariate Boxplot of Total Population",
ylab = "Total Population",
col = "lightblue",
border = "blue",
notch = TRUE)
ggplot(mydata, aes(y = `Total Male`)) +
geom_boxplot()
ggplot(mydata, aes(x = District, y = `Total population`)) +
geom_boxplot()
df1=data.frame(ID= c(1,2,3),
Name=c("Ram","Hari", "Geeta"))
df2=data.frame(ID= c(2,3,4),
GPA=c(3.2,2.8,4.0))
inner_join= merge(df1, df2,by="ID")
inner_join()
install.packages(tidyverse)
install.packages("tidyverse")
df1=data.frame(ID= c(1,2,3),
Name=c("Ram","Hari", "Geeta"))
df2=data.frame(ID= c(2,3,4),
GPA=c(3.2,2.8,4.0))
inner_join= merge(df1, df2,by="ID")
inner_join
left_join= merge(df1, df2, by="ID",all.x = True)
left_join= merge(df1, df2, by="ID",all.x = TRUE)
left_join
right_join= merge(df1, df2, by="ID",all.y = TRUE)
right_join
full_join= merge(df1, df2, by="ID",all = TRUE)
full_join
library(tidyverse)
library(dplyr)
inner= inner_join(df1, df2, by="ID")
inner
left =left_join(df1, df2, by="ID")
left
semi= semi_join(df1, df2, by="ID")
semi
anti= anti_join(df1, df2, by="ID")
anti
library(nycflights13)
name(flights)
names(flights)
names(airlines)
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
filter(num_delay==max(num_delay)) %>%
select(name)
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier")
names(flights)
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier")
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
filter(num_delay==max(num_delay)) %>%
#which airlines ahs the highest number of delayed departures?
delayed_flights = flights %>%
# whole sequence on dplyr
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
filter(num_delay==max(num_delay))
names(flights)
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
filter(num_delay==max(num_delay))
flights %>%
filter(dep_delay>0) %>%
group_by(carrier) %>%
summarise(num_delay=n()) %>%
left_join(airlines,by="carrier") %>%
filter(num_delay==max(num_delay)) %>%
select(name)
view(flights)
view(airports)
view(flights)
view(flights)
flights %>%
group_by(dest) %>%
summarise(mean_delay=mean(arr_delay, na.rm=TRUE)) %>%
filter(mean_delay==min(mean_delay, na.rm=TRUE)) %>%
left_join(airports,by=c("dest"="faa"))
flights %>%
group_by(dest) %>%
summarise(mean_delay=mean(arr_delay, na.rm=TRUE)) %>%
filter(mean_delay==min(mean_delay, na.rm=TRUE)) %>%
left_join(airports,by=c("dest"="faa")) %>%
select(name)
flights %>%
filter(origin=JFK,dest=SEA) %>%
summarise(mean_average=mean(air_time, na.rm=TRUE))
flights %>%
filter(origin==JFK,dest=SEA))%%
flights %>%
filter(origin==JFK,dest==SEA))%%
flights %>%
filter(origin==JFK,dest==SEA)%%
summarise(mean_average=mean(air_time, na.rm=TRUE))
flights %>%
filter(origin==JFK,dest==SEA)%%
summarise(mean_average=mean(air_time, na.rm=TRUE))
flights %>%
filter(origin=="JFK",dest=="SEA")%%
summarise(mean_average=mean(air_time, na.rm=TRUE))
